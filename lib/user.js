// Generated by CoffeeScript 1.10.0
(function() {
  var Api, Encryptor, User, _, md5;

  _ = require('lodash');

  Encryptor = require('simple-encryptor');

  md5 = require('md5');

  Api = require('./api');

  User = (function() {
    User.fromVkParams = function(config, params) {
      if (_.isString(params)) {
        params = this.decrypt(config, params);
      }
      if (!(params && params['viewer_id'] && this.isSignatureValid(config, params))) {
        return;
      }
      return new this(params);
    };

    User.decrypt = function(config, encryptedParams) {
      var encryptor, result;
      encryptor = new Encryptor("secret_key_" + config['appId'] + "_" + config['appSecret']);
      result = encryptor.decrypt(encryptedParams);
      if (result == null) {
        throw new Error("\nError while decoding vkontakte params: \"" + encryptedParams + "\"");
      }
      return result;
    };

    User.isSignatureValid = function(config, params) {
      return params['auth_key'] === this.calculateSignature(config, params);
    };

    User.calculateSignature = function(config, params) {
      return md5([config['appId'], params['viewer_id'], config['appSecret']].join('_'));
    };

    function User(options) {
      this.options = options != null ? options : {};
    }

    User.prototype.uid = function() {
      return this.options['viewer_id'];
    };

    User.prototype.accessToken = function() {
      return this.options['access_token'];
    };

    User.prototype.sid = function() {
      return this.options['sid'];
    };

    User.prototype.isAuthenticated = function() {
      return (this.accessToken() != null) && this.accessToken().length > 0;
    };

    User.prototype.secret = function() {
      return this.options['secret'];
    };

    User.prototype.referrer = function() {
      return this.options['referrer'];
    };

    User.prototype.apiClient = function() {
      return this._apiClient != null ? this._apiClient : this._apiClient = new Api(this.accessToken());
    };

    return User;

  })();

  module.exports = User;

}).call(this);
